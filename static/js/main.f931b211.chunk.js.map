{"version":3,"sources":["Die.js","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["Die","props","styles","backgroundColor","isHeld","react_default","a","createElement","className","style","onClick","holdDice","value","App","_React$useState","React","useState","allDice","_React$useState2","Object","slicedToArray","dice","setDice","_React$useState3","_React$useState4","isTenzies","setIsTenzies","newDice","count","push","generateNewDie","Math","ceil","random","id","nanoid","useEffect","firstDice","allSame","every","die","allHeld","console","log","diceElements","map","src_Die","prevDice","objectSpread","react_confetti_min_default","src","logo","alt","oldDice","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById","module","exports","p"],"mappings":"0NAkBeA,MAhBf,SAAaC,GACT,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXC,MAAOP,EACPQ,QAAST,EAAMU,UAEXN,EAAAC,EAAAC,cAAA,MACAC,UAAU,WAAWP,EAAMW,gCC0E5BC,MA/Ef,WAAe,IAAAC,EAEWC,IAAMC,SAASC,KAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAENO,EAFMH,EAAA,GAEAI,EAFAJ,EAAA,GAAAK,EAGqBR,IAAMC,UAAS,GAHpCQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNE,EAHMD,EAAA,GAGKE,EAHLF,EAAA,GAkBb,SAASP,IAEP,IADA,IAAMU,EAAU,GACPC,EAAQ,EAAGA,EAAQ,KAAMA,EAChCD,EAAQE,KAAKC,KAEf,OAAOH,EAST,SAASG,IACP,MAAO,CACLlB,MAAOmB,KAAKC,KAAqB,EAAhBD,KAAKE,UACtB7B,QAAQ,EACR8B,GAAIC,eA9BRpB,IAAMqB,UAAU,WACb,IAAMC,EAAYhB,EAAK,GAAGT,MACpB0B,EAAUjB,EAAKkB,MAAM,SAAAC,GAAG,OAAIA,EAAI5B,QAAUyB,IAC1CI,EAAUpB,EAAKkB,MAAM,SAAAC,GAAG,OAAIA,EAAIpC,SAElCkC,GAAWG,IACbf,GAAa,GACbgB,QAAQC,IAAI,cAEd,CAACtB,IAoCJ,IAAMuB,EAAevB,EAAKwB,IAAI,SAAAL,GAAG,OAC7BnC,EAAAC,EAAAC,cAACuC,EAAD,CACEZ,GAAIM,EAAIN,GACRtB,MAAO4B,EAAI5B,MACXR,OAAQoC,EAAIpC,OACZO,SAAU,kBAhBEuB,EAgBaM,EAAIN,QAfjCZ,EAAQ,SAAAyB,GAAQ,OAAIA,EAASF,IAAI,SAAAL,GAC/B,OAAOA,EAAIN,KAAOA,EAAXf,OAAA6B,EAAA,EAAA7B,CAAA,GACHqB,EADG,CACEpC,QAASoC,EAAIpC,SAAUoC,MAHpC,IAAkBN,OAqBlB,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZiB,GAAapB,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,MACdD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAK2C,IAAKC,IAAM3C,UAAU,WAAW4C,IAAI,SACzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZoC,GAEHvC,EAAAC,EAAAC,cAAA,UACEC,UAAU,YACVE,QAASe,EAxBnB,WACEC,GAAa,GACbJ,EAAQL,MAvBV,WACEK,EAAQ,SAAA+B,GAAO,OAAIA,EAAQR,IAAI,SAAAL,GAC7B,OAAOA,EAAIpC,OAASoC,EAAMV,UA4CpBL,EAAY,QAAU,gBCnEnB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP/D,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,WAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,OAEFC,SAASC,eAAe,SAM1BlB,uBChBAmB,EAAAC,QAAiBjB,EAAAkB,EAAuB","file":"static/js/main.f931b211.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Die(props) {\n    const styles = {\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\n    }\n    return (\n        <div className=\"die-face\"\n            style={styles}\n            onClick={props.holdDice}\n            >\n                <h2 \n                className=\"die-num\">{props.value}\n                </h2>\n        </div>\n    )\n}\n\nexport default Die","import logo from './logo.svg';\nimport './App.css';\nimport Die from './Die'\nimport React from 'react'\nimport {nanoid} from \"nanoid\"\nimport Confetti from \"react-confetti\"\n\nfunction App() {\n\n  const [dice, setDice] = React.useState(allDice())\n  const [isTenzies, setIsTenzies] = React.useState(false)\n  \n\n  React.useEffect(() => {\n     const firstDice = dice[0].value\n     const allSame = dice.every(die => die.value === firstDice)\n     const allHeld = dice.every(die => die.isHeld)\n    //  console.log(allSame)\n     if (allSame && allHeld) {\n       setIsTenzies(true)\n       console.log('You won!')\n     }\n  }, [dice])\n\n\n  function allDice() {\n    const newDice = []\n    for (let count = 0; count < 10; ++count) {\n      newDice.push(generateNewDie())\n    }\n    return newDice\n  }\n\n  function rollDice() {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generateNewDie()\n    }))\n  }\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    }\n  }\n\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(die => {\n      return die.id === id ?\n      {...die, isHeld: !die.isHeld} : die\n    }))\n  }\n\n  function resetDice() {\n    setIsTenzies(false)\n    setDice(allDice())\n  }\n  const diceElements = dice.map(die => (\n      <Die\n        id={die.id}\n        value={die.value}\n        isHeld={die.isHeld}\n        holdDice={() => holdDice(die.id)}\n      />   \n    )\n  )\n  \n  return (\n      <div className=\"App\">\n        {isTenzies && <Confetti />}\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div className='dice-container'>\n            {diceElements}\n          </div>\n          <button\n            className=\"roll-dice\"\n            onClick={isTenzies ? resetDice : rollDice}\n          >{isTenzies ? \"Reset\" : \"Roll Dice\"}\n          </button>\n        </header>\n      </div>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}